# Manifest V3 및 Service Worker 기본 구조

**Task ID:** T-015
**Status:** BACKLOG
**Importance:** MUST
**Complexity:** 6/10
**Urgency:** 9/10
**Dependencies:** None

## Description

### 요구사항
- Manifest V3 기반 브라우저 확장의 기본 골격 구성 Chrome Edge Firefox 호환
- Service Worker 백그라운드 스크립트 생성 및 설치 시작 이벤트 핸들러 등록
- 필요한 권한 설정 tabs storage notifications alarms 및 호스트 권한 정의
- chrome.storage.local API로 페어링 정보 및 설정 저장 로드 기능 구현
- 개발 환경 설정 Unpacked Extension으로 로컬 테스트 가능하도록 빌드 스크립트 구성

### 구현 상세
- extension/ 디렉토리 생성 후 manifest.json 작성 manifest_version 3 name version permissions background.service_worker 정의
- permissions에 tabs storage notifications alarms 추가 host_permissions에 https://앱도메인/* wss://ws서버/* 추가
- background.service_worker는 dist/service-worker.js 지정 TypeScript로 작성 후 빌드
- Service Worker src/background/service-worker.ts 파일 생성 chrome.runtime.onInstalled onStartup 이벤트 리스너 등록
- 설치 시 기본 설정 초기화 chrome.storage.local.set으로 version installTime 저장
- chrome.storage.local.get set remove API 래퍼 함수 작성 타입 안전하게 설정 관리
- 빌드 도구 esbuild 또는 webpack으로 TypeScript 번들링 dist/ 폴더에 출력
- 개발 모드 chrome://extensions 에서 Load unpacked 테스트 소스맵 생성으로 디버깅 지원

### 의사코드
```pseudo
// manifest.json
{
  "manifest_version": 3,
  "name": "Vooster Display Launcher",
  "version": "0.1.0",
  "description": "바코드 스캔으로 원격 디스플레이 제어",
  "permissions": ["tabs", "storage", "notifications", "alarms"],
  "host_permissions": [
    "https://app.vooster.com/*",
    "wss://ws.vooster.com/*"
  ],
  "background": {
    "service_worker": "dist/service-worker.js",
    "type": "module"
  },
  "action": {
    "default_title": "Vooster Display",
    "default_popup": "popup.html"
  },
  "options_page": "options.html",
  "icons": {
    "16": "icons/icon-16.png",
    "48": "icons/icon-48.png",
    "128": "icons/icon-128.png"
  }
}

// src/background/service-worker.ts
chrome.runtime.onInstalled.addListener(async (details) => {
  console.log('[ServiceWorker] Installed', details.reason)

  if (details.reason === 'install') {
    // 기본 설정 초기화
    await chrome.storage.local.set({
      version: '0.1.0',
      installTime: Date.now(),
      isPaired: false,
    })

    // Options 페이지 자동 오픈
    chrome.runtime.openOptionsPage()
  }
})

chrome.runtime.onStartup.addListener(() => {
  console.log('[ServiceWorker] Startup')
  // WebSocket 재연결 (T-017에서 구현)
})

// 설정 관리 헬퍼
async function getConfig<T>(key: string): Promise<T | null> {
  const result = await chrome.storage.local.get(key)
  return result[key] ?? null
}

async function setConfig<T>(key: string, value: T): Promise<void> {
  await chrome.storage.local.set({ [key]: value })
}

async function removeConfig(key: string): Promise<void> {
  await chrome.storage.local.remove(key)
}
```

### 테스트 전략
- 단위 테스트 설정 저장 로드 함수를 chrome.storage API 모킹으로 검증
- 설치 테스트 chrome://extensions에서 Unpacked 로드 후 onInstalled 이벤트 트리거 확인 기본 설정 저장 확인
- 권한 테스트 manifest.json에 정의된 모든 권한이 정상 승인되는지 확인 거부 시 가이드 표시
- 빌드 테스트 TypeScript 번들링 후 dist/ 폴더에 파일 생성 확인 소스맵 생성 확인
- E2E 확장 설치 후 Options 페이지 자동 오픈 확인 Service Worker 콘솔 로그 출력 확인

---

**Created:** 2025-10-23T08:30:00.000Z
**Updated:** 2025-10-23T08:30:00.000Z
